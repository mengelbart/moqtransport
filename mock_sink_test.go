// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mengelbart/moqtransport (interfaces: Sink)
//
// Generated by this command:
//
//	mockgen -build_flags=-tags=gomock -package moqtransport -self_package github.com/mengelbart/moqtransport -destination mock_sink_test.go github.com/mengelbart/moqtransport Sink
//
// Package moqtransport is a generated GoMock package.
package moqtransport

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSink is a mock of Sink interface.
type MockSink struct {
	ctrl     *gomock.Controller
	recorder *MockSinkMockRecorder
}

// MockSinkMockRecorder is the mock recorder for MockSink.
type MockSinkMockRecorder struct {
	mock *MockSink
}

// NewMockSink creates a new mock instance.
func NewMockSink(ctrl *gomock.Controller) *MockSink {
	mock := &MockSink{ctrl: ctrl}
	mock.recorder = &MockSinkMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSink) EXPECT() *MockSinkMockRecorder {
	return m.recorder
}

// push mocks base method.
func (m *MockSink) push(arg0 *objectMessage) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "push", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// push indicates an expected call of push.
func (mr *MockSinkMockRecorder) push(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "push", reflect.TypeOf((*MockSink)(nil).push), arg0)
}
